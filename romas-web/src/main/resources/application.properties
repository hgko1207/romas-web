# -----------------------------------------------------------
# Server Settings
# -----------------------------------------------------------
server.servlet.context-path=/romas
server.port=8080

# true일 경우 css, html 등 압축해서 전송할 때 이득이 되는 포맷들은 자동적으로 압축해서 보내는 것으로 설정된다.
server.compression.enabled=true

spring.devtools.livereload.enabled=true

# -----------------------------------------------------------
# Database Settings
# -----------------------------------------------------------
# default connection pool
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.maximumPoolSize=5
spring.datasource.hikari.pool-name=SpringBootJPAHikariCP
spring.datasource.hikari.idle-timeout=30000
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.max-lifetime=200000

#spring.datasource.driver-class-name=org.postgresql.Driver
#spring.datasource.url=jdbc:postgresql://localhost:5432/romas
#spring.datasource.username=postgres
#spring.datasource.password=inspace

spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.tomcat.validation-query=SELECT 1
spring.datasource.url=jdbc:mysql://192.168.0.19:3306/romas?autoReconnect=true&useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=Asia/Seoul
spring.datasource.username=root
spring.datasource.password=fpahsk

# -----------------------------------------------------------
# JPA Settings
# -----------------------------------------------------------
# PostgreSQL 상세 지정
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# API 호출시, SQL 문을 콘솔에 출력한다.
spring.jpa.show-sql=true

# DDL 정의시 데이터베이스의 고유 기능을 사용합니다. ex) 테이블 생성, 삭제 등 
spring.jpa.generate-ddl=false

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto=none

# -----------------------------------------------------------
# Logging Settings
# -----------------------------------------------------------
debug=false

# OFF, TRACE>DEBUG>INFO>WARN>ERROR
logging.level.root=INFO

# 콘솔 창에 출력되는 로깅 메세지를 색으로 구분해서 출력
spring.output.ansi.enabled=always

# 로그 메세지가 저장되는 로그 디렉터리
logging.file.path=logs
logging.level.org.hibernate.SQL=INFO
logging.level.org.springframework.security=INFO

# HikariCP에 로깅이 사용되는지 확인
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# logging.level.{패키지 경로}를 통해 로깅 레벨을 결정할 수 있슴
logging.level.net.woori.start=DEBUG